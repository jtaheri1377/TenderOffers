// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TenderNetCore.AppContexts;

#nullable disable

namespace TenderNetCore.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20240203044744_TenderDb")]
    partial class TenderDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TenderNetCore.Entities.ChosenContractor", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ChosenContractor");
                });

            modelBuilder.Entity("TenderNetCore.Entities.Contributor", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<int?>("Tenderid")
                        .HasColumnType("int");

                    b.Property<string>("fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("suggestedPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Tenderid");

                    b.ToTable("Contributor");
                });

            modelBuilder.Entity("TenderNetCore.Entities.Tender", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("chosenContractorid")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("finishOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isActive")
                        .HasColumnType("int");

                    b.Property<int>("maxPrice")
                        .HasColumnType("int");

                    b.Property<int>("minPrice")
                        .HasColumnType("int");

                    b.Property<string>("startOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("chosenContractorid");

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("TenderNetCore.Entities.Contributor", b =>
                {
                    b.HasOne("TenderNetCore.Entities.Tender", null)
                        .WithMany("contributors")
                        .HasForeignKey("Tenderid");
                });

            modelBuilder.Entity("TenderNetCore.Entities.Tender", b =>
                {
                    b.HasOne("TenderNetCore.Entities.ChosenContractor", "chosenContractor")
                        .WithMany()
                        .HasForeignKey("chosenContractorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chosenContractor");
                });

            modelBuilder.Entity("TenderNetCore.Entities.Tender", b =>
                {
                    b.Navigation("contributors");
                });
#pragma warning restore 612, 618
        }
    }
}
